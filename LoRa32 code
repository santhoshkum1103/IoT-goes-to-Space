#include <TinyGPS++.h>
#include <SoftwareSerial.h>
#include "DHT.h"
#include <TFT_eSPI.h>
#include <SPI.h>

#define DHTPIN 21
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);
TFT_eSPI tft = TFT_eSPI();

static const int RXPin = 23, TXPin = 19;
static const uint32_t GPSBaud = 9600;

TinyGPSPlus gps;

SoftwareSerial ss(RXPin, TXPin);

void setup(){
  Serial.begin(9600);
  ss.begin(GPSBaud);
  dht.begin();
}

void loop(){
  {
      float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
      float t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
      float f = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
    if (isnan(h) || isnan(t) || isnan(f)) {
      Serial.println(F("Failed to read from DHT sensor!"));
      return;
  } 



  // Compute heat index in Fahrenheit (the default)
  float hif = dht.computeHeatIndex(f, h);
  // Compute heat index in Celsius (isFahreheit = false)
  float hic = dht.computeHeatIndex(t, h, false);
 {

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("째C "));
  Serial.print(f);
  Serial.print(F("째F  Heat index: "));
  Serial.print(hic);
  Serial.print(F("째C "));
  Serial.print(hif);
  Serial.println(F("째F"));
  delay(500);
 }
    while (ss.available() > 0){
    gps.encode(ss.read());
    if (gps.location.isUpdated()){

      Serial.print("Latitude= "); 
      Serial.print(gps.location.lat(), 6);
      Serial.print(" Longitude= "); 
      Serial.println(gps.location.lng(), 6);
      Serial.print("Raw date DDMMYY = ");
      Serial.println(gps.date.value());
      Serial.print("Raw time in HHMMSSCC = "); 
      Serial.println(gps.time.value());
      Serial.print("Speed in m/s = ");
      Serial.println(gps.speed.mps());
      Serial.print("Course in degrees = "); 
      Serial.println(gps.course.deg());
      Serial.print("Altitude in feet = "); 
      Serial.println(gps.altitude.feet());
      Serial.print("Number of satellites in use = "); 
      Serial.println(gps.satellites.value());
      Serial.print("HDOP = "); 
      Serial.println(gps.hdop.value()); 

     }
    }
  }
}
       
      
